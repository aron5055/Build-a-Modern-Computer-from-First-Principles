// C_PUSH constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$eq$1_TRUE
D;JEQ
@SP
A=M-1
M=0
@StackTest$eq$1_END
0;JMP
(StackTest$eq$1_TRUE)
@SP
A=M-1
M=-1
(StackTest$eq$1_END)
// C_PUSH constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$eq$2_TRUE
D;JEQ
@SP
A=M-1
M=0
@StackTest$eq$2_END
0;JMP
(StackTest$eq$2_TRUE)
@SP
A=M-1
M=-1
(StackTest$eq$2_END)
// C_PUSH constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$eq$3_TRUE
D;JEQ
@SP
A=M-1
M=0
@StackTest$eq$3_END
0;JMP
(StackTest$eq$3_TRUE)
@SP
A=M-1
M=-1
(StackTest$eq$3_END)
// C_PUSH constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$lt$4_TRUE
D;JLT
@SP
A=M-1
M=0
@StackTest$lt$4_END
0;JMP
(StackTest$lt$4_TRUE)
@SP
A=M-1
M=-1
(StackTest$lt$4_END)
// C_PUSH constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$lt$5_TRUE
D;JLT
@SP
A=M-1
M=0
@StackTest$lt$5_END
0;JMP
(StackTest$lt$5_TRUE)
@SP
A=M-1
M=-1
(StackTest$lt$5_END)
// C_PUSH constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$lt$6_TRUE
D;JLT
@SP
A=M-1
M=0
@StackTest$lt$6_END
0;JMP
(StackTest$lt$6_TRUE)
@SP
A=M-1
M=-1
(StackTest$lt$6_END)
// C_PUSH constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$gt$7_TRUE
D;JGT
@SP
A=M-1
M=0
@StackTest$gt$7_END
0;JMP
(StackTest$gt$7_TRUE)
@SP
A=M-1
M=-1
(StackTest$gt$7_END)
// C_PUSH constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$gt$8_TRUE
D;JGT
@SP
A=M-1
M=0
@StackTest$gt$8_END
0;JMP
(StackTest$gt$8_TRUE)
@SP
A=M-1
M=-1
(StackTest$gt$8_END)
// C_PUSH constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@StackTest$gt$9_TRUE
D;JGT
@SP
A=M-1
M=0
@StackTest$gt$9_END
0;JMP
(StackTest$gt$9_TRUE)
@SP
A=M-1
M=-1
(StackTest$gt$9_END)
// C_PUSH constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
A=M-1
D=M
@R13
D=D+M
@SP
A=M-1
M=D
// C_PUSH constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
A=M-1
D=M
@R13
D=D-M
@SP
A=M-1
M=D
// neg
@SP
A=M-1
M=-M
// and
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
A=M-1
D=M
@R13
D=D&M
@SP
A=M-1
M=D
// C_PUSH constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
A=M-1
D=M
@R13
D=D|M
@SP
A=M-1
M=D
// not
@SP
A=M-1
M=!M
